 数据结构与算法：由数据的逻辑结构、存储结构、数据的运算组成
数据结构：数组、链表、栈、队列、散列表、二叉树、堆、跳表、图、Tire树
算法： 递归、排序、二分查找、搜索、哈希算法、贪心算法、分治算法、
回溯算法、动态规划、字符串匹配算法


1、逻辑结构与存储结构
(1)逻辑结构：分为线性结构和非线性结构
(1-1)线性结构(线性表、栈、队列)
(1-2)非线性结构(树、图)
(2)存储结构：顺序结构、链式结构、索引结构和散列结构
2、数据的运算：检索、排序、插入、删除、修改等
链表常见操作(增删改查)：
(1)append(element)：向列表末尾添加一个新的项
(2)insert(position，data)：向列表中某个位置插入一个项
(3)remove(element)：从列表中移除一项
(4)removeAt(position)：从列表某个位置删除一项
(5)updata(position,data)：修改某个位置的元素
(6)get(position)：获取对应位置的元素
(7)indexOf(element)：返回某个元素在列表中的索引，没有则返回-1
(8)isEmpty()
(9)size()
(10)toString()




哈希表：
哈希表的一些概念：
1. 哈希化：将大数字转化为数组范围内下标的过程(运用取余操作)，称之为哈希化
2. 哈希函数：将单词转化为大数字(利用幂的连乘)，再将大数字进行哈希化后放在一个函数中，这个函数就是哈希函数
3. 哈希表：最终将数据插入到要使用的数组，对整个结构的封装，称之为哈希表
 哈希表的冲突问题:
 冲突由来：当取余操作后，如果两个数的取余数都为同一个数(比如都等于3)，那么就会产生冲突
2种解决方案：
(1)链地址法：当产生冲突时，我们就用一个链条把他们存储起来，存储起来后再放在目标数组内，链条一般用 数组 或者 链表 。
(2)开放地址法：在取余位置中查看是否为null，如果不为空就向下查找，如果为空就直接插入(查找)即可。
开地址法的查找方法又分为3种：
(1)线性查找算法: x, x+1, x+2, x+3 ...
(2)二次探索算法: x+1^2, x+2^2, x+3^3 ...
(3)再哈希法:再用另外一个哈希函数进行哈希化(具备两个特点:与原来的哈希函数不一样;并且不能输出为0,不然会造成死循环),这个哈希函数可以是:stepSize = const - (key % const);这个公式永远都遵循这个范围原则: 0 < stepSize < key  一般建议这个const(常数都为质数











































